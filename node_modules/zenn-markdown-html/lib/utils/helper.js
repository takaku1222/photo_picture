"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateEmbedIframe = exports.isValidHttpUrl = exports.generateYoutubeHtmlFromVideoId = exports.generateYoutubeHtmlFromUrl = exports.isGithubUrl = void 0;
var utils_1 = require("markdown-it/lib/common/utils");
var url_matcher_1 = require("./url-matcher");
function isGithubUrl(url) {
    return /^https:\/\/github\.com\/([a-zA-Z0-9](-?[a-zA-Z0-9]){0,38})\/([a-zA-Z0-9](-?[a-zA-Z0-9._]){0,38})\/blob\/[^~\s:?[*^/\\]{2,}\/[\w!\-_~.*%()'"/]+(?:#L\d+(?:-L\d+)?)?$/.test(url);
}
exports.isGithubUrl = isGithubUrl;
function generateYoutubeHtml(videoId, start) {
    var escapedVideoId = (0, utils_1.escapeHtml)(videoId);
    // 48時間以内
    var time = Math.min(Number(start || 0), 48 * 60 * 60);
    var startQuery = time ? "&start=".concat(time) : '';
    return "<div class=\"embed-youtube\"><iframe src=\"https://www.youtube.com/embed/".concat(escapedVideoId, "?loop=1&playlist=").concat(escapedVideoId).concat(startQuery, "\" allowfullscreen loading=\"lazy\"></iframe></div>");
}
function generateYoutubeHtmlFromUrl(url) {
    var params = (0, url_matcher_1.extractYoutubeVideoParameters)(url);
    if (!params) {
        return generateEmbedIframe('link-card', url);
    }
    else {
        return generateYoutubeHtml(params.videoId, params.start);
    }
}
exports.generateYoutubeHtmlFromUrl = generateYoutubeHtmlFromUrl;
function generateYoutubeHtmlFromVideoId(videoId) {
    return generateYoutubeHtml(videoId);
}
exports.generateYoutubeHtmlFromVideoId = generateYoutubeHtmlFromVideoId;
function isValidHttpUrl(str) {
    try {
        var url = new URL(str);
        return url.protocol === 'http:' || url.protocol === 'https:';
    }
    catch (_) {
        return false;
    }
}
exports.isValidHttpUrl = isValidHttpUrl;
function generateEmbedIframe(type, src) {
    // ユーザーからの入力値が引数として渡されたときのために念のためencodeする
    var encodedType = encodeURIComponent(type);
    var encodedSrc = encodeURIComponent(src);
    var id = "zenn-embedded__".concat(Math.random().toString(16).slice(2));
    var iframeSrc = "https://embed.zenn.studio/".concat(encodedType, "#").concat(id);
    return "<div class=\"zenn-embedded zenn-embedded-".concat(encodedType, "\"><iframe id=\"").concat(id, "\" src=\"").concat(iframeSrc, "\" data-content=\"").concat(encodedSrc, "\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></div>");
}
exports.generateEmbedIframe = generateEmbedIframe;
